  0%|                                                                                                                                                                                  | 0/19645 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/bitsandbytes/autograd/_functions.py:322: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization
  warnings.warn(f"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization")
Traceback (most recent call last):
  File "/home/bash1989/founders_and_coders/founders_and_coders/week5_fine_tuning_LLAMA2/train.py", line 42, in <module>
    trainer.train()
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/transformers/trainer.py", line 1555, in train
    return inner_training_loop(
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/transformers/trainer.py", line 1860, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/transformers/trainer.py", line 2734, in training_step
    self.accelerator.backward(loss)
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/accelerate/accelerator.py", line 1987, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/bash1989/anaconda3/envs/ml/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt